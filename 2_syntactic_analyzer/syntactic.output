State 47 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: var_dec stmt_seq

    2 var_dec: var_dec single_dec
    3        | %empty

    4 single_dec: type ID SEMI

    5 type: INTEGER
    6     | FLOAT

    7 stmt_seq: stmt_seq stmt
    8         | %empty

    9 stmt: IF exp THEN stmt stmt_prime
   10     | WHILE exp DO stmt
   11     | variable ASSIGN exp SEMI
   12     | READ LPAREN variable RPAREN SEMI
   13     | WRITE LPAREN exp RPAREN SEMI
   14     | block

   15 stmt_prime: ELSE stmt
   16           | %empty

   17 block: LBRACE stmt_seq RBRACE

   18 exp: simple_exp LT simple_exp
   19    | simple_exp EQ simple_exp
   20    | simple_exp

   21 simple_exp: simple_exp PLUS term
   22           | simple_exp MINUS term
   23           | term

   24 term: term TIMES factor
   25     | term DIV factor
   26     | factor

   27 factor: LPAREN exp RPAREN
   28       | INT_NUM
   29       | FLOAT_NUM
   30       | variable

   31 variable: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 4 31
SEMI (259) 4 11 12 13
INTEGER (260) 5
FLOAT (261) 6
IF (262) 9
THEN (263) 9
ELSE (264) 15
WHILE (265) 10
DO (266) 10
ASSIGN (267) 11
READ (268) 12
LPAREN (269) 12 13 27
RPAREN (270) 12 13 27
WRITE (271) 13
RBRACE (272) 17
LBRACE (273) 17
LT (274) 18
EQ (275) 19
PLUS (276) 21
MINUS (277) 22
TIMES (278) 24
DIV (279) 25
INT_NUM (280) 28
FLOAT_NUM (281) 29


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
var_dec (29)
    on left: 2 3, on right: 1 2
single_dec (30)
    on left: 4, on right: 2
type (31)
    on left: 5 6, on right: 4
stmt_seq (32)
    on left: 7 8, on right: 1 7 17
stmt (33)
    on left: 9 10 11 12 13 14, on right: 7 9 10 15
stmt_prime (34)
    on left: 15 16, on right: 9
block (35)
    on left: 17, on right: 14
exp (36)
    on left: 18 19 20, on right: 9 10 11 13 27
simple_exp (37)
    on left: 21 22 23, on right: 18 19 20 21 22
term (38)
    on left: 24 25 26, on right: 21 22 23 24 25
factor (39)
    on left: 27 28 29 30, on right: 24 25 26
variable (40)
    on left: 31, on right: 11 12 30


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (var_dec)

    program  go to state 1
    var_dec  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: var_dec . stmt_seq
    2 var_dec: var_dec . single_dec

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 8 (stmt_seq)

    single_dec  go to state 6
    type        go to state 7
    stmt_seq    go to state 8


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 type: INTEGER .

    $default  reduce using rule 5 (type)


State 5

    6 type: FLOAT .

    $default  reduce using rule 6 (type)


State 6

    2 var_dec: var_dec single_dec .

    $default  reduce using rule 2 (var_dec)


State 7

    4 single_dec: type . ID SEMI

    ID  shift, and go to state 9


State 8

    1 program: var_dec stmt_seq .
    7 stmt_seq: stmt_seq . stmt

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    LBRACE  shift, and go to state 15

    $default  reduce using rule 1 (program)

    stmt      go to state 16
    block     go to state 17
    variable  go to state 18


State 9

    4 single_dec: type ID . SEMI

    SEMI  shift, and go to state 19


State 10

   31 variable: ID .

    $default  reduce using rule 31 (variable)


State 11

    9 stmt: IF . exp THEN stmt stmt_prime

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 23
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 12

   10 stmt: WHILE . exp DO stmt

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 28
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 13

   12 stmt: READ . LPAREN variable RPAREN SEMI

    LPAREN  shift, and go to state 29


State 14

   13 stmt: WRITE . LPAREN exp RPAREN SEMI

    LPAREN  shift, and go to state 30


State 15

   17 block: LBRACE . stmt_seq RBRACE

    $default  reduce using rule 8 (stmt_seq)

    stmt_seq  go to state 31


State 16

    7 stmt_seq: stmt_seq stmt .

    $default  reduce using rule 7 (stmt_seq)


State 17

   14 stmt: block .

    $default  reduce using rule 14 (stmt)


State 18

   11 stmt: variable . ASSIGN exp SEMI

    ASSIGN  shift, and go to state 32


State 19

    4 single_dec: type ID SEMI .

    $default  reduce using rule 4 (single_dec)


State 20

   27 factor: LPAREN . exp RPAREN

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 33
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 21

   28 factor: INT_NUM .

    $default  reduce using rule 28 (factor)


State 22

   29 factor: FLOAT_NUM .

    $default  reduce using rule 29 (factor)


State 23

    9 stmt: IF exp . THEN stmt stmt_prime

    THEN  shift, and go to state 34


State 24

   18 exp: simple_exp . LT simple_exp
   19    | simple_exp . EQ simple_exp
   20    | simple_exp .
   21 simple_exp: simple_exp . PLUS term
   22           | simple_exp . MINUS term

    LT     shift, and go to state 35
    EQ     shift, and go to state 36
    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 20 (exp)


State 25

   23 simple_exp: term .
   24 term: term . TIMES factor
   25     | term . DIV factor

    TIMES  shift, and go to state 39
    DIV    shift, and go to state 40

    $default  reduce using rule 23 (simple_exp)


State 26

   26 term: factor .

    $default  reduce using rule 26 (term)


State 27

   30 factor: variable .

    $default  reduce using rule 30 (factor)


State 28

   10 stmt: WHILE exp . DO stmt

    DO  shift, and go to state 41


State 29

   12 stmt: READ LPAREN . variable RPAREN SEMI

    ID  shift, and go to state 10

    variable  go to state 42


State 30

   13 stmt: WRITE LPAREN . exp RPAREN SEMI

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 43
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 31

    7 stmt_seq: stmt_seq . stmt
   17 block: LBRACE stmt_seq . RBRACE

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    RBRACE  shift, and go to state 44
    LBRACE  shift, and go to state 15

    stmt      go to state 16
    block     go to state 17
    variable  go to state 18


State 32

   11 stmt: variable ASSIGN . exp SEMI

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 45
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 33

   27 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 46


State 34

    9 stmt: IF exp THEN . stmt stmt_prime

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    LBRACE  shift, and go to state 15

    stmt      go to state 47
    block     go to state 17
    variable  go to state 18


State 35

   18 exp: simple_exp LT . simple_exp

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    simple_exp  go to state 48
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 36

   19 exp: simple_exp EQ . simple_exp

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    simple_exp  go to state 49
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 37

   21 simple_exp: simple_exp PLUS . term

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    term      go to state 50
    factor    go to state 26
    variable  go to state 27


State 38

   22 simple_exp: simple_exp MINUS . term

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    term      go to state 51
    factor    go to state 26
    variable  go to state 27


State 39

   24 term: term TIMES . factor

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    factor    go to state 52
    variable  go to state 27


State 40

   25 term: term DIV . factor

    ID         shift, and go to state 10
    LPAREN     shift, and go to state 20
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    factor    go to state 53
    variable  go to state 27


State 41

   10 stmt: WHILE exp DO . stmt

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    LBRACE  shift, and go to state 15

    stmt      go to state 54
    block     go to state 17
    variable  go to state 18


State 42

   12 stmt: READ LPAREN variable . RPAREN SEMI

    RPAREN  shift, and go to state 55


State 43

   13 stmt: WRITE LPAREN exp . RPAREN SEMI

    RPAREN  shift, and go to state 56


State 44

   17 block: LBRACE stmt_seq RBRACE .

    $default  reduce using rule 17 (block)


State 45

   11 stmt: variable ASSIGN exp . SEMI

    SEMI  shift, and go to state 57


State 46

   27 factor: LPAREN exp RPAREN .

    $default  reduce using rule 27 (factor)


State 47

    9 stmt: IF exp THEN stmt . stmt_prime

    ELSE  shift, and go to state 58

    ELSE      [reduce using rule 16 (stmt_prime)]
    $default  reduce using rule 16 (stmt_prime)

    stmt_prime  go to state 59


State 48

   18 exp: simple_exp LT simple_exp .
   21 simple_exp: simple_exp . PLUS term
   22           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 18 (exp)


State 49

   19 exp: simple_exp EQ simple_exp .
   21 simple_exp: simple_exp . PLUS term
   22           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 19 (exp)


State 50

   21 simple_exp: simple_exp PLUS term .
   24 term: term . TIMES factor
   25     | term . DIV factor

    TIMES  shift, and go to state 39
    DIV    shift, and go to state 40

    $default  reduce using rule 21 (simple_exp)


State 51

   22 simple_exp: simple_exp MINUS term .
   24 term: term . TIMES factor
   25     | term . DIV factor

    TIMES  shift, and go to state 39
    DIV    shift, and go to state 40

    $default  reduce using rule 22 (simple_exp)


State 52

   24 term: term TIMES factor .

    $default  reduce using rule 24 (term)


State 53

   25 term: term DIV factor .

    $default  reduce using rule 25 (term)


State 54

   10 stmt: WHILE exp DO stmt .

    $default  reduce using rule 10 (stmt)


State 55

   12 stmt: READ LPAREN variable RPAREN . SEMI

    SEMI  shift, and go to state 60


State 56

   13 stmt: WRITE LPAREN exp RPAREN . SEMI

    SEMI  shift, and go to state 61


State 57

   11 stmt: variable ASSIGN exp SEMI .

    $default  reduce using rule 11 (stmt)


State 58

   15 stmt_prime: ELSE . stmt

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    LBRACE  shift, and go to state 15

    stmt      go to state 62
    block     go to state 17
    variable  go to state 18


State 59

    9 stmt: IF exp THEN stmt stmt_prime .

    $default  reduce using rule 9 (stmt)


State 60

   12 stmt: READ LPAREN variable RPAREN SEMI .

    $default  reduce using rule 12 (stmt)


State 61

   13 stmt: WRITE LPAREN exp RPAREN SEMI .

    $default  reduce using rule 13 (stmt)


State 62

   15 stmt_prime: ELSE stmt .

    $default  reduce using rule 15 (stmt_prime)
